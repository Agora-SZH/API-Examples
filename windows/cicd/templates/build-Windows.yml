# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

parameters:
  displayName: ''
  workingDirectory: ''
  scheme: ''  
  sdkVersion: ''
  faceUnitySDKVersion: ''
  Machine: ''
  solutionName: ''
  release: ''
jobs:
  - job: ${{ parameters.displayName }}Build
    displayName: ${{ parameters.displayName }}

    pool:
      vmImage: 'windows-2019'

    variables:
      - group: AgoraKeys
      - name: solution
        value: '${{ parameters.workingDirectory }}/${{ parameters.solutionName }}'
      - name: buildPlatform
        value: '${{ parameters.Machine }}'
      - name: buildConfiguration
        value: 'Release'
    steps:
      - script: echo "$(WindowsRTCSDK)" && ls
      - powershell: cd ${{ parameters.workingDirectory }} && installThirdParty.bat
      - script: cd ${{ parameters.workingDirectory }} && ls && python ci.py
        env:
          AGORA_APP_ID: $(agora.appId)
          
      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
          vsVersion: '15.0'
          msbuildArchitecture: '${{ parameters.Machine }}'
      - script: cd ${{ parameters.workingDirectory }}/${{ parameters.release }} && ls
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: ${{ parameters.workingDirectory }}/${{ parameters.release }}
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: ${{ parameters.workingDirectory }}/${{ parameters.displayName }}.zip
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: ${{ parameters.workingDirectory }}/${{ parameters.displayName }}.zip
          ArtifactName: ${{ parameters.displayName }}
      
